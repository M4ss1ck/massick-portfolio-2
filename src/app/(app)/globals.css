@import "tailwindcss";

@theme {
  --font-*: initial;
  --font-display: "Kode Mono Variable", monospace;
  --font-body: "Federant", system-ui;

  --foreground: #c45c4b;
  --background-start-rgb: #6424cb;
  --background-end-rgb: #2c0c3c;
  --color-background: #6424cb;
  --color-primary: var(--color-blue-500);
  --color-secondary: #c45c4b;
  --color-other: #f4ac1c;
}

@property --glow {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}

@-webkit-keyframes glow {
  to {
    --glow: 1turn;
  }
}

@keyframes glow {
  to {
    --glow: 1turn;
  }
}

@-webkit-keyframes blurAnimation {
  0% {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
  10% {
    -webkit-filter: blur(1px);
    filter: blur(1px);
  }
  30% {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
  100% {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
}

@keyframes blurAnimation {
  0% {
    -webkit-filter: blur(1px);
    filter: blur(1px);
  }
  10% {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
  100% {
    -webkit-filter: blur(0);
    filter: blur(0);
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  ::-webkit-backdrop {
    border-color: var(--color-gray-200, currentColor);
  }
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  /* Scrollbar */

  /* width */
  ::-webkit-scrollbar {
    width: 10px;
  }

  /* Track */
  ::-webkit-scrollbar-track {
    background: var(--color-background);
  }

  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: var(--color-other);
    border-radius: 5px;
  }

  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: var(--color-primary);
  }
}

@utility underline-animation {
  position: relative;
  &::after {
    position: absolute;
    transform: scaleX(0%);
    bottom: -1;
    display: block;
    width: 100%;
    height: 0.5rem;
    background-color: var(--color-primary);
    content: "";
    transition: transform 500ms;
    transform-origin: bottom right;
  }
  &:hover::after {
    transform: scaleX(100%);
    transform-origin: bottom left;
  }
}

@utility page-transition {
  opacity: 0;
  /* transform: translateY(10%); */
  -webkit-filter: blur(20px);
  filter: blur(20px);
  overflow: hidden;
}

@utility fancy-border {
  position: relative;
  overflow: hidden;
  padding: 0.5rem;
  border-radius: 9999px;

  &::before {
    position: absolute;
    z-index: -1;
    inset: 1rem;
    border: solid 1rem;
    -o-border-image: conic-gradient(
        from var(--glow),
        #000000,
        #333333,
        #666666,
        #999999,
        #cccccc,
        #ffffff,
        #cccccc,
        #999999,
        #666666,
        #333333,
        #000000
      )
      1;
    border-image: conic-gradient(
        from var(--glow),
        #000000,
        #333333,
        #666666,
        #999999,
        #cccccc,
        #ffffff,
        #cccccc,
        #999999,
        #666666,
        #333333,
        #000000
      )
      1;
    border-radius: 9999px;
    -webkit-filter: blur(0.8rem);
    filter: blur(0.8rem);
    -webkit-animation: glow 4s infinite linear;
    animation: glow 4s infinite linear;
    content: "";
  }

  /* img {
    -webkit-animation: blurAnimation 4s infinite;
    animation: blurAnimation 4s infinite;
  } */
}

@layer utilities {
  body {
    color: rgb(var(--foreground));
    background: linear-gradient(
        to bottom,
        transparent,
        var(--background-end-rgb)
      )
      var(--background-start-rgb);

    transition-property:
      opacity,
      transform,
      filter,
      background,
      -webkit-filter;
    transition-timing-function: ease-in-out;
    transition-duration: 300ms;
  }
}
